// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Fairing{
  id              Int         @id @default(autoincrement())
  reused          Boolean?
  recovery_attempt Boolean?
  recovered       Boolean?
  ships           String[]

  launch Launch @relation(fields: [launch_id], references: [id])

  @@map("fairing")
  launch_id String
}

model PatchLinks {
  id              Int         @id @default(autoincrement())
  small           String?
  large           String?

  links Links @relation(fields: [links_id], references: [id])

  @@map("patchLinks")
  links_id Int
}

model RedditLinks {
  id              Int         @id @default(autoincrement())
  campaign        String?
  launch          String?
  media           String?
  recovery        String?

  links Links @relation(fields: [links_id], references: [id])

  @@map("redditLinks")
  links_id Int
}

model FlickrLinks {
  id              Int         @id @default(autoincrement())
  small           String[]
  original        String[]

  links Links @relation(fields: [links_id], references: [id])

  @@map("flickrLinks")
  links_id Int
}

model Links {
  id              Int         @id @default(autoincrement())

  patch_links PatchLinks[]
  reddit_links RedditLinks[]
  flickr_links FlickrLinks[]

  presskit        String?
  webcast         String?
  youtube_id       String?
  article         String?
  wikipedia       String?

  launch Launch @relation(fields: [launch_id], references: [id])

  @@map("links")
  launch_id String
}

model Failure {
  id              Int         @id @default(autoincrement())
  time            Int?
  altitude        Int?
  reason          String?

  launch Launch @relation(fields: [launch_id], references: [id])

  @@map("failure")
  launch_id String
}

model Cores {
  id              Int      @id @default(autoincrement())
  core            String?
  flight          Int?
  gridfins        Boolean?
  legs            Boolean?
  reused          Boolean?
  landing_attempt  Boolean?
  landing_success  Boolean?
  landing_type     String?
  landpad         String?

  launch Launch @relation(fields: [launch_id], references: [id])

  @@map("cores")
  launch_id String
}

model Crew {
  id              Int      @id @default(autoincrement())
  crew            String?
  role            String?

  launch Launch @relation(fields: [launch_id], references: [id])

  @@map("crew")
  launch_id String
}

model Launch {
  id          String    @id

  fairings            Fairing[]
  links               Links[]

  static_fire_date_utc  String?
  static_fire_date_unix Int?
  net                   Boolean?
  window                Int?
  rocket                String?
  success               Boolean?

  failures              Failure[]

  details               String?
  crew                  Crew[]
  ships                 String[]
  capsules              String[]
  payloads              String[]
  launchpad             String?
  flight_number         Int?
  name                  String?
  date_utc              String?
  date_unix             Int?
  date_local            String?
  date_precision        String?
  upcoming              Boolean?

  cores                 Cores[]

  auto_update         Boolean?
  tbd                 Boolean?
  launch_library_id   String?

  @@map("launch")
}